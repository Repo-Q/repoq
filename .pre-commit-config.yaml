# Pre-commit hooks configuration for RepoQ
# See https://pre-commit.com for more information

default_language_version:
  python: python3.11

repos:
  # Ruff - Fast Python linter and formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.4
    hooks:
      # Run linter
      - id: ruff
        args: [--fix]
        types_or: [python, pyi]
      # Run formatter
      - id: ruff-format
        types_or: [python, pyi]

  # Mypy - Static type checker
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        additional_dependencies:
          - types-PyYAML
          - types-requests
        args: [--config-file=pyproject.toml]
        exclude: ^(tests/|repoq/ai/baml_client/)

  # Built-in pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(docs/|.*\.md$)
      - id: end-of-file-fixer
        exclude: ^(docs/|.*\.jsonld$)
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
        exclude: ^(repoq/ontologies/.*\.jsonld$)
      - id: check-toml
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: debug-statements
      - id: mixed-line-ending
        args: [--fix=lf]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]
        additional_dependencies: ["bandit[toml]"]
        exclude: ^tests/

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [--strict, -c=.yamllint.yml]

  # Pytest - Run tests before commit
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-quick
        entry: uv run pytest tests/unit/ -x --tb=short
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-commit]

  # Smoke test - Ensure CLI works
  - repo: local
    hooks:
      - id: cli-smoke-test
        name: cli-smoke-test
        entry: bash -c 'uv run repoq --help > /dev/null && echo "âœ“ CLI smoke test passed"'
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-commit]

  # Validate pyproject.toml
  - repo: https://github.com/python-poetry/poetry
    rev: 1.8.0
    hooks:
      - id: poetry-check
        args: [--lock]
        always_run: true
        files: ^(pyproject\.toml|uv\.lock)$

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.43.0
    hooks:
      - id: markdownlint
        args: [--fix]
        exclude: ^(docs/tutorials/|CHANGELOG\.md)

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [pytest-check, cli-smoke-test]  # Skip on CI (run in GitHub Actions)
  submodules: false
