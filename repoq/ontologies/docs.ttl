@prefix docs: <http://example.org/vocab/docs#> .
@prefix repo: <http://example.org/vocab/repo#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .

<http://example.org/vocab/docs#> a owl:Ontology ;
    dcterms:title "RepoQ Documentation Ontology" ;
    dcterms:description """
        Ontology for documentation artifacts, tutorials, API docs, architecture.
        Enables traceability: code ↔ docs ↔ ontology concepts.
        Validates that every concept is documented with examples.
    """ ;
    dcterms:creator "RepoQ Contributors" ;
    dcterms:created "2025-10-22"^^xsd:date ;
    owl:versionInfo "1.0.0" ;
    rdfs:comment "Documentation ontology with concept coverage tracking" .

# ============================================================================
# DOCUMENTATION TYPES
# ============================================================================

docs:Document a owl:Class ;
    rdfs:subClassOf prov:Entity ;
    rdfs:label "Document" ;
    rdfs:comment """
        Documentation artifact (markdown, HTML, PDF, etc.).
        Can be tutorial, guide, API reference, architecture doc.
    """ .

docs:Tutorial a owl:Class ;
    rdfs:subClassOf docs:Document ;
    rdfs:label "Tutorial" ;
    rdfs:comment """
        Step-by-step educational content.
        Example: 'Getting Started with RepoQ', 'Property Testing Guide'.
    """ .

docs:HowToGuide a owl:Class ;
    rdfs:subClassOf docs:Document ;
    rdfs:label "How-To Guide" ;
    rdfs:comment """
        Task-oriented guide solving specific problem.
        Example: 'How to Add Custom Analyzer', 'How to Write SHACL Shapes'.
    """ .

docs:APIReference a owl:Class ;
    rdfs:subClassOf docs:Document ;
    rdfs:label "API Reference" ;
    rdfs:comment """
        Technical API documentation (classes, functions, parameters).
        Generated from docstrings or manually written.
    """ .

docs:Architecture a owl:Class ;
    rdfs:subClassOf docs:Document ;
    rdfs:label "Architecture Document" ;
    rdfs:comment """
        System architecture documentation.
        Example: 'TRS Framework', 'RDF Export Architecture'.
    """ .

docs:Explanation a owl:Class ;
    rdfs:subClassOf docs:Document ;
    rdfs:label "Explanation" ;
    rdfs:comment """
        Conceptual documentation explaining why/how things work.
        Example: 'Why Stratification Prevents Paradoxes'.
    """ .

docs:Specification a owl:Class ;
    rdfs:subClassOf docs:Document ;
    rdfs:label "Specification" ;
    rdfs:comment """
        Formal specification document.
        Example: 'OML Specification', 'SHACL Constraints'.
    """ .

# ============================================================================
# DOCUMENTATION PROPERTIES
# ============================================================================

docs:title a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Document ;
    rdfs:range xsd:string ;
    rdfs:label "Title" .

docs:filePath a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Document ;
    rdfs:range xsd:string ;
    rdfs:label "File Path" ;
    rdfs:comment "Path to document file (e.g., docs/tutorials/quickstart.md)" .

docs:format a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Document ;
    rdfs:range docs:Format ;
    rdfs:label "Format" .

docs:Format a rdfs:Datatype ;
    owl:oneOf ("markdown" "html" "pdf" "rst" "asciidoc") .

docs:author a owl:ObjectProperty ;
    rdfs:domain docs:Document ;
    rdfs:range foaf:Person ;
    rdfs:label "Author" .

docs:lastUpdated a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Document ;
    rdfs:range xsd:dateTime ;
    rdfs:label "Last Updated" .

docs:wordCount a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Document ;
    rdfs:range xsd:nonNegativeInteger ;
    rdfs:label "Word Count" .

# ============================================================================
# CONCEPT DOCUMENTATION MAPPING
# ============================================================================

docs:documentsConcept a owl:ObjectProperty ;
    rdfs:domain docs:Document ;
    rdfs:range owl:Class ;
    rdfs:label "Documents Concept" ;
    rdfs:comment """
        Links document to ontology concept it describes.
        Enables traceability and coverage tracking.
        Example: tutorial documents meta:SelfAnalysis concept.
    """ .

docs:documentsProperty a owl:ObjectProperty ;
    rdfs:domain docs:Document ;
    rdfs:range rdf:Property ;
    rdfs:label "Documents Property" ;
    rdfs:comment "Links document to specific property described" .

docs:documentsFunction a owl:ObjectProperty ;
    rdfs:domain docs:Document ;
    rdfs:range repo:Function ;
    rdfs:label "Documents Function" ;
    rdfs:comment "Links document to function/method described" .

docs:documentsModule a owl:ObjectProperty ;
    rdfs:domain docs:Document ;
    rdfs:range repo:Module ;
    rdfs:label "Documents Module" ;
    rdfs:comment "Links document to module/package described" .

# ============================================================================
# CODE EXAMPLES
# ============================================================================

docs:CodeExample a owl:Class ;
    rdfs:label "Code Example" ;
    rdfs:comment """
        Code snippet within documentation.
        Should be executable and validated.
    """ .

docs:hasCodeExample a owl:ObjectProperty ;
    rdfs:domain docs:Document ;
    rdfs:range docs:CodeExample ;
    rdfs:label "Has Code Example" .

docs:exampleLanguage a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:CodeExample ;
    rdfs:range xsd:string ;
    rdfs:label "Example Language" ;
    rdfs:comment "Programming language (python, bash, turtle, etc.)" .

docs:exampleCode a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:CodeExample ;
    rdfs:range xsd:string ;
    rdfs:label "Example Code" ;
    rdfs:comment "Source code of example" .

docs:exampleValidated a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:CodeExample ;
    rdfs:range xsd:boolean ;
    rdfs:label "Example Validated" ;
    rdfs:comment """
        True if example code has been validated (executed successfully).
        False indicates broken example requiring fix.
    """ .

docs:validatedAt a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:CodeExample ;
    rdfs:range xsd:dateTime ;
    rdfs:label "Validated At" .

docs:demonstratesConcept a owl:ObjectProperty ;
    rdfs:domain docs:CodeExample ;
    rdfs:range owl:Class ;
    rdfs:label "Demonstrates Concept" ;
    rdfs:comment "Ontology concept demonstrated by example" .

# ============================================================================
# DOCUMENTATION COVERAGE
# ============================================================================

docs:Coverage a owl:Class ;
    rdfs:label "Documentation Coverage" ;
    rdfs:comment """
        Measures how well ontology concepts are documented.
        Similar to test coverage but for documentation.
    """ .

docs:coveragePercentage a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Coverage ;
    rdfs:range xsd:decimal ;
    rdfs:label "Coverage Percentage" ;
    rdfs:comment "Percentage of concepts with documentation (0.0-100.0)" ;
    owl:minInclusive 0.0 ;
    owl:maxInclusive 100.0 .

docs:undocumentedConcept a owl:ObjectProperty ;
    rdfs:domain docs:Coverage ;
    rdfs:range owl:Class ;
    rdfs:label "Undocumented Concept" ;
    rdfs:comment "Concept lacking documentation" .

docs:documentedConcept a owl:ObjectProperty ;
    rdfs:domain docs:Coverage ;
    rdfs:range owl:Class ;
    rdfs:label "Documented Concept" ;
    rdfs:comment "Concept with documentation" .

# ============================================================================
# NAVIGATION & STRUCTURE
# ============================================================================

docs:Section a owl:Class ;
    rdfs:label "Document Section" ;
    rdfs:comment "Section/chapter within document" .

docs:hasSection a owl:ObjectProperty ;
    rdfs:domain docs:Document ;
    rdfs:range docs:Section ;
    rdfs:label "Has Section" .

docs:sectionTitle a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Section ;
    rdfs:range xsd:string ;
    rdfs:label "Section Title" .

docs:sectionLevel a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Section ;
    rdfs:range xsd:nonNegativeInteger ;
    rdfs:label "Section Level" ;
    rdfs:comment "Heading level (1-6 for H1-H6)" ;
    owl:minInclusive 1 ;
    owl:maxInclusive 6 .

docs:linksto a owl:ObjectProperty ;
    rdfs:domain docs:Document ;
    rdfs:range docs:Document ;
    rdfs:label "Links To" ;
    rdfs:comment "Document references another document" .

docs:relatedTo a owl:ObjectProperty ;
    rdfs:domain docs:Document ;
    rdfs:range docs:Document ;
    rdfs:label "Related To" ;
    rdfs:comment "Semantically related documents" ;
    owl:equivalentProperty owl:sameAs .

# ============================================================================
# QUALITY INDICATORS
# ============================================================================

docs:readabilityScore a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Document ;
    rdfs:range xsd:decimal ;
    rdfs:label "Readability Score" ;
    rdfs:comment "Flesch-Kincaid or similar readability metric" ;
    owl:minInclusive 0.0 ;
    owl:maxInclusive 100.0 .

docs:completenessScore a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Document ;
    rdfs:range xsd:decimal ;
    rdfs:label "Completeness Score" ;
    rdfs:comment """
        How complete is documentation coverage?
        1.0 = all required sections present, all examples validated.
    """ ;
    owl:minInclusive 0.0 ;
    owl:maxInclusive 1.0 .

docs:hasTODO a owl:DatatypeProperty ;
    rdfs:domain docs:Document ;
    rdfs:range xsd:string ;
    rdfs:label "Has TODO" ;
    rdfs:comment "TODO comment in documentation" .

docs:hasFixme a owl:DatatypeProperty ;
    rdfs:domain docs:Document ;
    rdfs:range xsd:string ;
    rdfs:label "Has FIXME" ;
    rdfs:comment "FIXME comment in documentation" .

docs:isCurrent a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Document ;
    rdfs:range xsd:boolean ;
    rdfs:label "Is Current" ;
    rdfs:comment """
        True if documentation is up-to-date with code.
        False if code changed but docs not updated.
    """ .

# ============================================================================
# DIAGRAMS
# ============================================================================

docs:Diagram a owl:Class ;
    rdfs:label "Diagram" ;
    rdfs:comment """
        Visual diagram (Mermaid, PlantUML, Graphviz, etc.).
        Embedded in documentation.
    """ .

docs:hasDiagram a owl:ObjectProperty ;
    rdfs:domain docs:Document ;
    rdfs:range docs:Diagram ;
    rdfs:label "Has Diagram" .

docs:diagramType a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Diagram ;
    rdfs:range docs:DiagramType ;
    rdfs:label "Diagram Type" .

docs:DiagramType a rdfs:Datatype ;
    owl:oneOf ("mermaid" "plantuml" "graphviz" "c4" "sequence") .

docs:diagramSource a owl:DatatypeProperty , owl:FunctionalProperty ;
    rdfs:domain docs:Diagram ;
    rdfs:range xsd:string ;
    rdfs:label "Diagram Source" ;
    rdfs:comment "Source code for diagram generation" .

# ============================================================================
# AXIOMS
# ============================================================================

# Every document must have title and format
docs:Document rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty docs:title ;
    owl:cardinality 1
] .

docs:Document rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty docs:format ;
    owl:cardinality 1
] .

# API reference must document at least one concept
docs:APIReference rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty docs:documentsConcept ;
    owl:minCardinality 1
] .

# Tutorial should have code examples
docs:Tutorial rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty docs:hasCodeExample ;
    owl:minCardinality 1
] .

# Code examples must specify language
docs:CodeExample rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty docs:exampleLanguage ;
    owl:cardinality 1
] .

# Coverage must have percentage
docs:Coverage rdfs:subClassOf [
    a owl:Restriction ;
    owl:onProperty docs:coveragePercentage ;
    owl:cardinality 1
] .

# ============================================================================
# DOCUMENTATION
# ============================================================================

docs:Docs a owl:AnnotationProperty ;
    rdfs:label "Documentation reference" ;
    rdfs:seeAlso <https://www.mkdocs.org/> ,
                 <https://www.sphinx-doc.org/> ,
                 <https://diataxis.fr/> ,
                 <https://documentation.divio.com/> .
