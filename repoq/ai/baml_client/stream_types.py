# ----------------------------------------------------------------------------
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
# ----------------------------------------------------------------------------

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code using: baml-cli generate
# baml-cli is available with the baml package.

import typing
import typing_extensions
from pydantic import BaseModel, ConfigDict

import baml_py

from . import types

StreamStateValueT = typing.TypeVar('StreamStateValueT')
class StreamState(BaseModel, typing.Generic[StreamStateValueT]):
    value: StreamStateValueT
    state: typing_extensions.Literal["Pending", "Incomplete", "Complete"]
# #########################################################################
# Generated classes (6)
# #########################################################################

class CriticalPair(BaseModel):
    left_term: typing.Optional[str] = None
    right_term: typing.Optional[str] = None
    common_reduct: typing.Optional[str] = None
    joinable: typing.Optional[bool] = None
    explanation: typing.Optional[str] = None

class OntologyIssue(BaseModel):
    type: typing.Optional[str] = None
    location: typing.Optional[str] = None
    description: typing.Optional[str] = None
    suggested_fix: typing.Optional[str] = None

class OntologyValidationResult(BaseModel):
    ontology_uri: typing.Optional[str] = None
    is_consistent: typing.Optional[bool] = None
    issues: typing.List["OntologyIssue"]
    reasoning_chain: typing.List[str]
    suggested_improvements: typing.List[str]
    confidence: typing.Optional[float] = None

class StratificationAnalysis(BaseModel):
    current_level: typing.Optional[int] = None
    max_safe_level: typing.Optional[int] = None
    self_reference_detected: typing.Optional[bool] = None
    universe_violations: typing.List[str]
    safe_to_proceed: typing.Optional[bool] = None
    explanation: typing.Optional[str] = None

class TRSValidationResult(BaseModel):
    rule_id: typing.Optional[str] = None
    confluence_status: typing.Optional[types.ConfluenceStatus] = None
    termination_status: typing.Optional[types.TerminationStatus] = None
    critical_pairs: typing.List["CriticalPair"]
    termination_proof: typing.Optional["TerminationProof"] = None
    issues: typing.List[str]
    suggestions: typing.List[str]
    confidence: typing.Optional[float] = None

class TerminationProof(BaseModel):
    method: typing.Optional[str] = None
    measure: typing.Optional[str] = None
    well_founded: typing.Optional[bool] = None
    explanation: typing.Optional[str] = None

# #########################################################################
# Generated type aliases (0)
# #########################################################################
